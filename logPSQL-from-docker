docker run -d --name postgresql -e POSTGRES_USER=dev_PSQL -e POSTGRES_PASSWORD=My_3c0mm#PSQL --network netPSQL --volume VOL_PSQL:/bitnami bitnami/postgresql:latest
docker run -d --name phppgadmin -p 80:8080 -p 443:8443 --network netPSQL bitnami/phppgadmin:latest

sudo chown -R my_username my_folder
psql -d mydb -U myuser
psql -h myhost -d mydb -U myuser
#######################
Backup FAQ: How do I create a backup of a Postgresql database?

Solution: I create a Postgresql backup (a Postgresql dump) for this website using the pg_dump command, like this:

pg_dump -h db_server -U db_user -W db_name > db.dump

Password:
----------------------------------------------------------------
This approach also works:

export PGPASSWORD=my-secret-password
pg_dump -h localhost -U <username> <database-name> > db_name.dump
-----------------------------------------------------------------
psql commands

To issue any of these psql commands, first log into your database using the psql command, then issue any of the commands shown in the "Command" column below:
Listing 	Command 	Argument
Table, index, view, or sequence 	\d 	name
Tables 	\dt 	name
Indexes 	\di 	name
Sequences 	\ds 	name
Views 	\dv 	name
Permissions 	\dp or \z 	name
System tables 	\dS 	name
Large objects 	\dl 	name
Types 	\dT 	name
Functions 	\df 	name
Operators 	\do 	name
Aggregates 	\da 	name
Comments 	\dd 	name
Databases 	\l 	name
###############################################################

Run composer install or php composer.phar install
Run php artisan key:generate
Run php artisan migrate
Run php artisan db:seed to run seeders, if any.
Run php artisan serve

2022-11-18 01:55:22 postgresql 04:55:22.79 
2022-11-18 01:55:22 postgresql 04:55:22.79 Welcome to the Bitnami postgresql container
2022-11-18 01:55:22 postgresql 04:55:22.80 Subscribe to project updates by watching https://github.com/bitnami/containers
2022-11-18 01:55:22 postgresql 04:55:22.80 Submit issues and feature requests at https://github.com/bitnami/containers/issues
2022-11-18 01:55:22 postgresql 04:55:22.80 
2022-11-18 01:55:22 postgresql 04:55:22.82 INFO  ==> ** Starting PostgreSQL setup **
2022-11-18 01:55:22 postgresql 04:55:22.85 INFO  ==> Validating settings in POSTGRESQL_* env vars..
2022-11-18 01:55:22 postgresql 04:55:22.85 ERROR ==> The POSTGRESQL_PASSWORD environment variable is empty or not set. Set the environment variable ALLOW_EMPTY_PASSWORD=yes to allow the container to be started with blank passwords. This is recommended only for development.
2022-11-18 01:55:22 postgresql 04:55:22.86 ERROR ==> The POSTGRESQL_PASSWORD environment variable is empty or not set. Set the environment variable ALLOW_EMPTY_PASSWORD=yes to allow the container to be started with blank passwords. This is recommended only for development.
2022-11-18 01:55:45 postgresql 04:55:45.37 
2022-11-18 01:55:45 postgresql 04:55:45.37 Welcome to the Bitnami postgresql container
2022-11-18 01:55:45 postgresql 04:55:45.37 Subscribe to project updates by watching https://github.com/bitnami/containers
2022-11-18 01:55:45 postgresql 04:55:45.37 Submit issues and feature requests at https://github.com/bitnami/containers/issues
2022-11-18 01:55:45 postgresql 04:55:45.38 
2022-11-18 01:55:45 postgresql 04:55:45.40 INFO  ==> ** Starting PostgreSQL setup **
2022-11-18 01:55:45 postgresql 04:55:45.42 INFO  ==> Validating settings in POSTGRESQL_* env vars..
2022-11-18 01:55:45 postgresql 04:55:45.42 ERROR ==> The POSTGRESQL_PASSWORD environment variable is empty or not set. Set the environment variable ALLOW_EMPTY_PASSWORD=yes to allow the container to be started with blank passwords. This is recommended only for development.
2022-11-18 01:55:45 postgresql 04:55:45.43 ERROR ==> The POSTGRESQL_PASSWORD environment variable is empty or not set. Set the environment variable ALLOW_EMPTY_PASSWORD=yes to allow the container to be started with blank passwords. This is recommended only for development.
